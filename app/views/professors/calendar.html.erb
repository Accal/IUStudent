<div class="mt-5">
  <%= render '/shared/table' %>
</div>

<script type="text/javascript">
  $(document).ready(populateTable);
  
  function populateTable() {
    var table = $("#calendar");
    var rows = $('tr', table.get(0));
  
    // Takes input from students controller and passes it as an array to a js variable
    var courses =  <%= raw @formatted_courses.to_json %>;
  
    // Iterate over courses and add to table
    for (course of courses) {
      // Assign variables
      var course_name = course[0];
      var day1 = course[1];
      var start_time1 = course[2];
      var end_time1 = course[3];
      var day2 = course[4];
      var start_time2 = course[5];
      var end_time2 = course[6];
      var row;
      var current_id = "";
  
      // Test Code
      if (start_time1 != ""){
        row = document.getElementById(start_time1)
        current_id = row.id;
  
        while (current_id != end_time1){
          current_id = row.id;
          if (row.cells[day_index(day1)].innerHTML != ""){
            alert("You have a clash between " + course_name + " and " + row.cells[day_index(day1)].innerHTML);
            break;
          } else {
            row.cells[day_index(day1)].innerHTML = course_name;
          }
          row = rows.eq(row.rowIndex + 1).get(0);
        }
      }
  
      if (start_time2 != ""){
        row = document.getElementById(start_time2)
        current_id = row.id;
  
        while (current_id != end_time2){
          current_id = row.id;
          if (row.cells[day_index(day2)].innerHTML != ""){
            alert("You have a clash between " + course_name + " and " + row.cells[day_index(day1)].innerHTML);
            break;
          } else {
            row.cells[day_index(day2)].innerHTML = course_name;
          }
          row = rows.eq(row.rowIndex + 1).get(0);
        }
      }
    }
  
    MergeCommonRows(table);
  }
  
  // Find index of a column head for a specific day
  function day_index(day){
    return $("#" + day).index();
  }
  
  function MergeCommonRows(table) {
      var firstColumnBrakes = [];
      // iterate through the columns instead of passing each column as function parameter:
      for(var i=1; i<=table.find('th').length; i++){
          var previous = null, cellToExtend = null, rowspan = 1;
          table.find("td:nth-child(" + i + ")").each(function(index, e){
              var jthis = $(this), content = jthis.text();
              // check if current row "break" exist in the array. If not, then extend rowspan:
              if (previous == content && content !== "") {
                  // hide the row instead of remove(), so the DOM index won't "move" inside loop.
                  jthis.addClass('hidden');
                  cellToExtend.attr("rowspan", (rowspan = rowspan+1));
              }else{
                  // store row breaks only for the first column:
                  if(i === 1) firstColumnBrakes.push(index);
                  rowspan = 1;
                  previous = content;
                  cellToExtend = jthis;
              }
          });
      }
      // now remove hidden td's (or leave them hidden if you wish):
      $('td.hidden').remove();
  }
</script>